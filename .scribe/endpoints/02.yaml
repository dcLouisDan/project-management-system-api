name: 'Team Management'
description: |-

  APIs for managing teams
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/teams
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'List teams'
      description: 'Get a paginated list of teams with optional filters.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      name:
        name: name
        description: 'Filter teams by name (partial match).'
        required: false
        example: Development
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      has_leader:
        name: has_leader
        description: 'Filter teams by whether they have a leader assigned.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of results per page. Default is 15.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      name: Development
      has_leader: true
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 403
        content: |-
          {
              "message": "User is not logged in."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/teams
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Create team'
      description: 'Create a new team with the provided details.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the Team. Must not be greater than 255 characters.'
        required: true
        example: Development
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Description of the Team.'
        required: false
        example: 'Team responsible for product development'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Development
      description: 'Team responsible for product development'
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"data": {"id": 1, "name": "Development Team", "description": "Handles all development tasks", "created_at": "2024-01-01T12:00:00Z", "updated_at": "2024-01-01T12:00:00Z"}, "message": "Team created successfully"}'
        headers: []
        description: success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/teams/{team_id}'
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Get team'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Team] 16"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/teams/{team_id}'
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Update team details'
      description: 'Update the details of an existing team.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      description: 'Eius et animi quos velit et.'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/teams/{team_id}'
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete team'
      description: 'Permanently delete a team from the system.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
