name: 'Project Management'
description: 'APIs for managing projects'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/projects
    metadata:
      groupName: 'Project Management'
      groupDescription: 'APIs for managing projects'
      subgroup: ''
      subgroupDescription: ''
      title: 'List projects'
      description: 'Get a paginated list of all projects with optional filtering.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      status:
        name: status
        description: 'Filter by project status.'
        required: false
        example: in_progress
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      manager_id:
        name: manager_id
        description: 'Filter by manager ID.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      start_date_from:
        name: start_date_from
        description: 'date Filter by start date (from).'
        required: false
        example: '2024-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      start_date_to:
        name: start_date_to
        description: 'date Filter by start date (to).'
        required: false
        example: '2024-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of items per page. Default is 15.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      status: in_progress
      manager_id: 3
      start_date_from: '2024-01-01'
      start_date_to: '2024-12-31'
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": [{"id": 1, "name": "New Website", "description": "Build company website", "status": "in_progress", "start_date": "2024-01-01", "due_date": "2024-06-30"}], "links": {}, "meta": {}}'
        headers: []
        description: success
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to retrieve projects: Database connection error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}'
    metadata:
      groupName: 'Project Management'
      groupDescription: 'APIs for managing projects'
      subgroup: ''
      subgroupDescription: ''
      title: 'Get project'
      description: 'Get details of a specific project by ID, including its manager and assigned teams.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": {"id": 1, "name": "New Website", "description": "Build company website", "status": "in_progress", "manager": {"id": 2, "name": "Jane Manager"}, "teams": []}, "message": "Project details retrieved successfully."}'
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: '{"message": "Project not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to retrieve project details: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/projects
    metadata:
      groupName: 'Project Management'
      groupDescription: 'APIs for managing projects'
      subgroup: ''
      subgroupDescription: ''
      title: 'Create project'
      description: 'Create a new project with the provided details.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the project. Must be unique.'
        required: true
        example: 'New Website'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Description of the project.'
        required: false
        example: 'Build a responsive company website'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      manager_id:
        name: manager_id
        description: 'The ID of the project manager. Must be a user with admin or project manager role.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'Current status of the project. Allowed values: not started, in progress, completed, on hold.'
        required: true
        example: in_progress
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'Project start date.'
        required: true
        example: '2024-01-01'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      due_date:
        name: due_date
        description: 'Project due date. Must be on or after start_date.'
        required: false
        example: '2024-06-30'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'New Website'
      description: 'Build a responsive company website'
      manager_id: 3
      status: in_progress
      start_date: '2024-01-01'
      due_date: '2024-06-30'
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"data": {"id": 1, "name": "New Website", "description": "Build a responsive company website", "manager_id": 3, "status": "in_progress", "start_date": "2024-01-01", "due_date": "2024-06-30", "created_at": "2024-01-01T12:00:00Z", "updated_at": "2024-01-01T12:00:00Z"}, "message": "Project created successfully."}'
        headers: []
        description: success
        custom: []
      -
        status: 400
        content: '{"data": null, "message": "The specified manager is not qualified to manage projects.", "errors": [], "meta": []}'
        headers: []
        description: 'unqualified manager'
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"name": ["The name has already been taken."]}}'
        headers: []
        description: 'validation error'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to create project: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/projects/{project_id}'
    metadata:
      groupName: 'Project Management'
      groupDescription: 'APIs for managing projects'
      subgroup: ''
      subgroupDescription: ''
      title: 'Update project'
      description: "Update an existing project's details."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the project. Must be unique.'
        required: false
        example: 'Updated Website Project'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Description of the project.'
        required: false
        example: 'Updated project description'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      manager_id:
        name: manager_id
        description: 'The ID of the project manager. Must be a user with admin or project manager role.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'Current status of the project. Allowed values: not started, in progress, completed, on hold.'
        required: false
        example: completed
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'Project start date.'
        required: false
        example: '2024-01-15'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      due_date:
        name: due_date
        description: 'Project due date. Must be on or after start_date.'
        required: false
        example: '2024-07-31'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Updated Website Project'
      description: 'Updated project description'
      manager_id: 4
      status: completed
      start_date: '2024-01-15'
      due_date: '2024-07-31'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": {"id": 1, "name": "Updated Website Project", "description": "Updated project description", "manager_id": 4, "status": "completed", "start_date": "2024-01-15", "due_date": "2024-07-31", "created_at": "2024-01-01T12:00:00Z", "updated_at": "2024-02-01T12:00:00Z"}, "message": "Project updated successfully."}'
        headers: []
        description: success
        custom: []
      -
        status: 400
        content: '{"data": null, "message": "The specified manager is not qualified to manage projects.", "errors": [], "meta": []}'
        headers: []
        description: 'unqualified manager'
        custom: []
      -
        status: 404
        content: '{"message": "Project not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"name": ["The name has already been taken."]}}'
        headers: []
        description: 'validation error'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to update project: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/projects/{project_id}'
    metadata:
      groupName: 'Project Management'
      groupDescription: 'APIs for managing projects'
      subgroup: ''
      subgroupDescription: ''
      title: 'Soft delete project'
      description: 'Soft delete a project from the system.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": null, "message": "Project deleted successfully."}'
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: '{"message": "Project not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to delete project: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/projects/{projectId}/restore'
    metadata:
      groupName: 'Project Management'
      groupDescription: 'APIs for managing projects'
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore soft-deleted project'
      description: 'Restore a previously deleted project.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      projectId:
        name: projectId
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      projectId: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": {"id": 1, "name": "New Website", "description": "Build company website", "status": "in_progress"}, "message": "Project restored successfully."}'
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: '{"message": "Project not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to restore project: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/projects/{project_id}/manager'
    metadata:
      groupName: 'Project Management'
      groupDescription: 'APIs for managing projects'
      subgroup: ''
      subgroupDescription: ''
      title: 'Set project manager'
      description: 'Assign or change the project manager for a specific project.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      manager_id:
        name: manager_id
        description: 'The ID of the user to assign as project manager. Must be a user with admin or project manager role.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      manager_id: 5
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": {"id": 1, "name": "New Website", "description": "Build company website", "manager_id": 5, "status": "in_progress"}, "message": "Project manager assigned successfully."}'
        headers: []
        description: success
        custom: []
      -
        status: 400
        content: '{"data": null, "message": "The specified manager is not qualified to manage projects.", "errors": [], "meta": []}'
        headers: []
        description: 'unqualified manager'
        custom: []
      -
        status: 404
        content: '{"message": "Project not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"manager_id": ["The selected manager id is invalid."]}}'
        headers: []
        description: 'validation error'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to assign project manager: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/projects/{project_id}/teams'
    metadata:
      groupName: 'Project Management'
      groupDescription: 'APIs for managing projects'
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign teams to project'
      description: 'Assign multiple teams to a project in a single request.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      team_ids:
        name: team_ids
        description: 'Array of team IDs to assign to the project.'
        required: true
        example:
          - 1
          - 3
          - 5
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      team_ids:
        - 1
        - 3
        - 5
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": {"project": {"id": 1, "name": "New Website", "teams": [{"id": 1, "name": "Development Team"}, {"id": 3, "name": "QA Team"}]}, "invalid_team_ids": []}, "message": "Teams assigned to project successfully."}'
        headers: []
        description: success
        custom: []
      -
        status: 200
        content: '{"data": {"project": {"id": 1, "name": "New Website", "teams": [{"id": 1, "name": "Development Team"}]}, "invalid_team_ids": [99]}, "message": "Teams assigned to project successfully."}'
        headers: []
        description: 'success with invalid teams'
        custom: []
      -
        status: 404
        content: '{"message": "Project not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"team_ids.0": ["The selected team_ids.0 is invalid."]}}'
        headers: []
        description: 'validation error'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to assign teams to project: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
