## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Team Management'
description: |-

  APIs for managing teams
endpoints:
  -
    httpMethods:
      - GET
    uri: teams
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'List teams'
      description: 'Get a paginated list of teams with optional filters.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      name:
        name: name
        description: 'Filter teams by name (partial match).'
        required: false
        example: Development
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      has_leader:
        name: has_leader
        description: 'Filter teams by whether they have a leader assigned.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of results per page. Default is 15.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      name: Development
      has_leader: true
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"name":"Bailey Ltd","description":"Et fugiat sunt nihil accusantium. Mollitia modi deserunt aut ab provident perspiciatis quo. Nostrum aut adipisci quidem nostrum.","created_at":"2025-11-01T13:20:00.000000Z","updated_at":"2025-11-01T13:20:00.000000Z"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: '{"data": [{"id": 1, "name": "Development Team", "description": "Handles all development tasks"}], "links": {}, "meta": {}}'
        headers: []
        description: success
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to retrieve teams: Database connection error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: teams
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Create team'
      description: 'Create a new team with the provided details.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the Team. Must be unique.'
        required: true
        example: 'Development Team'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Description of the Team.'
        required: false
        example: 'Team responsible for product development'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Development Team'
      description: 'Team responsible for product development'
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"data": {"id": 1, "name": "Development Team", "description": "Handles all development tasks", "created_at": "2024-01-01T12:00:00Z", "updated_at": "2024-01-01T12:00:00Z"}, "message": "Team created successfully"}'
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"name": ["The name has already been taken."]}}'
        headers: []
        description: 'validation error'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to create team: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'teams/{team_id}'
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Get team'
      description: 'Get details of a specific team by ID, including its members.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":2,"name":"Bailey Ltd","description":"Et fugiat sunt nihil accusantium. Mollitia modi deserunt aut ab provident perspiciatis quo. Nostrum aut adipisci quidem nostrum.","created_at":"2025-11-01T13:20:00.000000Z","updated_at":"2025-11-01T13:20:00.000000Z"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: '{"data": {"id": 1, "name": "Development Team", "description": "Handles all development tasks", "users": []}, "message": "Team retrieved successfully"}'
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: '{"message": "Team not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to retrieve team", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'teams/{team_id}'
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Update team details'
      description: 'Update the details of an existing team.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the Team. Must be unique.'
        required: false
        example: 'Updated Development Team'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Description of the Team.'
        required: false
        example: 'Updated team description'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Updated Development Team'
      description: 'Updated team description'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": {"id": 1, "name": "Updated Development Team", "description": "Updated description", "created_at": "2024-01-01T12:00:00Z", "updated_at": "2024-01-02T12:00:00Z"}, "message": "Team updated successfully"}'
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: '{"message": "Team not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"name": ["The name has already been taken."]}}'
        headers: []
        description: 'validation error'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to update team: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'teams/{team_id}'
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete team'
      description: 'Permanently delete a team from the system.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": null, "message": "Team deleted successfully"}'
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: '{"message": "Team not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to delete team: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'teams/{team_id}/members'
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Add member to team'
      description: 'Add a single user to a team with a specified role.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The ID of the user to add.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      role:
        name: role
        description: 'The role to assign. Allowed values: team lead, team member.'
        required: true
        example: 'team member'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 5
      role: 'team member'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": null, "message": "User added to team successfully"}'
        headers: []
        description: success
        custom: []
      -
        status: 400
        content: '{"data": null, "message": "Failed to add user to team: Invalid user or role", "errors": [], "meta": []}'
        headers: []
        description: 'invalid argument'
        custom: []
      -
        status: 404
        content: '{"message": "Team not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"user_id": ["The selected user id is invalid."]}}'
        headers: []
        description: 'validation error'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to add user to team: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'teams/{team_id}/members/bulk'
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Add multiple members to team'
      description: 'Add multiple users to a team with their specified roles in a single request.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      members:
        name: members
        description: 'Array of members to add.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'members[].user_id':
        name: 'members[].user_id'
        description: 'The ID of the user to add.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'members[].role':
        name: 'members[].role'
        description: 'The role to assign. Allowed values: team lead, team member.'
        required: true
        example: 'team member'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      members:
        -
          user_id: 5
          role: 'team member'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": {"invalid_users": []}, "message": "Users added to team successfully"}'
        headers: []
        description: success
        custom: []
      -
        status: 200
        content: '{"data": {"invalid_users": [3, 7]}, "message": "Users added to team successfully"}'
        headers: []
        description: 'success with invalid users'
        custom: []
      -
        status: 404
        content: '{"message": "Team not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"members.0.user_id": ["The selected members.0.user_id is invalid."]}}'
        headers: []
        description: 'validation error'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to add users to team: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'teams/{team_id}/members/{user_id}'
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove member from team'
      description: 'Remove a single user from a team.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 16
      user_id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The ID of the user to remove.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 5
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": null, "message": "User removed from team successfully"}'
        headers: []
        description: success
        custom: []
      -
        status: 400
        content: '{"data": null, "message": "Failed to remove user from team: User not in team", "errors": [], "meta": []}'
        headers: []
        description: 'invalid argument'
        custom: []
      -
        status: 404
        content: '{"message": "Team not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"user_id": ["The selected user id is invalid."]}}'
        headers: []
        description: 'validation error'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to remove user from team: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'teams/{team_id}/members'
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove multiple members from team'
      description: 'Remove multiple users from a team in a single request.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_ids:
        name: user_ids
        description: 'Array of user IDs to remove from the team.'
        required: true
        example:
          - 5
          - 8
          - 12
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      user_ids:
        - 5
        - 8
        - 12
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": null, "message": "Users removed from team successfully"}'
        headers: []
        description: success
        custom: []
      -
        status: 400
        content: '{"data": null, "message": "Failed to remove users from team: Invalid user IDs", "errors": [], "meta": []}'
        headers: []
        description: 'invalid argument'
        custom: []
      -
        status: 404
        content: '{"message": "Team not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"user_ids.0": ["The selected user_ids.0 is invalid."]}}'
        headers: []
        description: 'validation error'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to remove users from team: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'teams/{team_id}/lead'
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Set team leader'
      description: "Set a user as the team leader. If there's an existing leader, they will be demoted to team member."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The ID of the user to set as leader.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 5
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": {"demoted_lead": {"id": 3, "name": "Previous Leader"}}, "message": "Team leader set successfully"}'
        headers: []
        description: success
        custom: []
      -
        status: 200
        content: '{"data": {"demoted_lead": null}, "message": "Team leader set successfully"}'
        headers: []
        description: 'success - no previous leader'
        custom: []
      -
        status: 200
        content: '{"data": null, "message": "User is already the team lead"}'
        headers: []
        description: 'user already leader'
        custom: []
      -
        status: 400
        content: '{"data": null, "message": "Failed to set team leader: User does not have the team lead role", "errors": [], "meta": []}'
        headers: []
        description: 'invalid argument'
        custom: []
      -
        status: 404
        content: '{"message": "Team not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"user_id": ["The selected user id is invalid."]}}'
        headers: []
        description: 'validation error'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to set team leader: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'teams/{team_id}/projects'
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign project to team'
      description: 'Assign a project to the team to work on.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      project_id:
        name: project_id
        description: 'The ID of the project to assign.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      notes:
        name: notes
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      project_id: 3
      notes: 'n'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": null, "message": "Project assigned to team successfully"}'
        headers: []
        description: success
        custom: []
      -
        status: 400
        content: '{"data": null, "message": "Failed to assign project to team: Project already assigned to team", "errors": [], "meta": []}'
        headers: []
        description: 'invalid argument'
        custom: []
      -
        status: 404
        content: '{"message": "Team not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"project_id": ["The selected project id is invalid."]}}'
        headers: []
        description: 'validation error'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to assign project to team: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'teams/{team_id}/projects/{project_id}'
    metadata:
      groupName: 'Team Management'
      groupDescription: |-

        APIs for managing teams
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove Project from team'
      description: 'Remove a project assignment from the team.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      team_id:
        name: team_id
        description: 'The ID of the team.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      team_id: 16
      project_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      project_id:
        name: project_id
        description: 'The ID of the project to remove.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      project_id: 3
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": null, "message": "Project removed from team successfully"}'
        headers: []
        description: success
        custom: []
      -
        status: 400
        content: '{"data": null, "message": "Failed to remove project from team: Project not found", "errors": [], "meta": []}'
        headers: []
        description: 'invalid argument'
        custom: []
      -
        status: 404
        content: '{"message": "Team not found"}'
        headers: []
        description: 'not found'
        custom: []
      -
        status: 500
        content: '{"data": null, "message": "Failed to remove project from team: Internal server error", "errors": [], "meta": []}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
